export function addGlobalEventListener(
  type: string,
  selector: string,
  callback: Function,
  options: Object,
  parent = document
) {
  parent.addEventListener(
    type,
    (e) => {
      if (e.target.matches(selector)) callback(e);
    },
    options
  );
}

export function qs(selector: string, parent = document) {
  return parent.querySelector(selector);
}

export function qsa(selector: string, parent = document) {
  return [...parent.querySelectorAll(selector)];
}

export function createElement(type: string, options = {}) {
  const element = document.createElement(type);
  Object.entries(options).forEach(([key, value]) => {
    if (key === "class") {
      element.classList.add(value);
      return;
    }

    if (key === "dataset") {
      Object.entries(value).forEach(([dataKey, dataValue]) => {
        element.dataset[dataKey] = dataValue;
      });
      return;
    }

    if (key === "text") {
      element.textContent = value;
      return;
    }

    element.setAttribute(key, value);
  });
  return element;
}
